지하 1층부터 10층까지 움직이는 엘리베이터가 있다.

짝수 엘리베이터는 지하 1층과 1층도 가능하여야하며
홀수 엘리베이터는 지하 1층과 10층이 가능하여야한다.

짝수도 2가지의 조건이 있고 홀수도 2가지의 조건이 있다.

1. 짝수엘리베이터를 탈 것인지 홀수엘리베이터를 탈 것인지 물어본다. 짝수와 홀수엘리베이터를 선택 후 각각의 함수를 사용해서 로직을 짠다.

2. 함수 2가지를 만들어줘야된다.

둘의 공통된 조건으로는 지하 1층을 갈 수 있어야 한다.
각각의 조건으로 1층과 10층을 갈 수 있어야 한다.
함수는 2가지 이므로 if문으로 2가지 조건을 걸면 된다.

//짝수엘리베이터

if(2가지 조건 처리){
  if(짝수 층 처리 -> true 홀수 false 짝수){
    예외 층 처리 로직    
  } else {
    로직
  }
} else {
  로직
} 


//홀수엘리베이터

if(2가지 조건 처리){
  if(홀수 층 처리 -> true 짝수 false 홀수){
    예외 층 처리 로직    
  } else {
    로직
  }
} else {
  로직
} 

 
2-1. 예외층은 console.log()로 '해당 엘리베이터로는 갈 수 없는 층입니다.' 를 입력해준다.
2-2. 예외 층 처리 조건문으로 
      floorNumber !== -1 && floorNumber !== 1 (홀수 층은 1대신 10)
     그 해당 조건이 참일 경우 한번 더 걸러주며 
      floorNumber % 2 !== 0 (홀수 층은 0 대신 1)
     상위 조건이 거짓일 경우와 위의 조건 거짓일 경우 예외 층 로직을 추가해주면 된다.
2-3. console.log()로 '문을 열겠습니다.' 를 입력해준 후
2-4. setTimeout()으로 1초의 딜레이를 준 뒤 'n층에 도착하였습니다' 를 작성해준다.
2-5. 함수 앞에 async를 입력 하고 setTimeout에 await를 줌으로써 이 함수를 동기로 설정해준다.
2-6. console.log()에 '문을 닫습니다.' 라는 문구가 나오게 하면 된다. (setTimeout으로 1초의 딜레이를 준다. 보통 도착하고 몇 초 뒤 안내가 나오기 때문이다.)

3. inquirer로 숫자를 입력할 수 있는 인터페이스를 제작한다.
[
  {
    type : 'list',
    name : 'elevator',
    message : '어떤 엘리베이터를 탑승하시겠습니까?',
    choices : ['oddElevator','evenElevator'],
  },
  {
    type : 'number',
    name : 'floor',
    message : '몇층으로 이동하시겠습니까?',
  },
  {
    type : 'confirm',
    name : 'confirm',
    message : '해당 층으로 이동하시겠습니까?',
  }
]

4. then으로 조건을 걸어주면 된다.

answers를 받아온 후 

if(answers.elevator === 'oddElevator'){
  oddElevator(answers.floor)
} else {
  evenElevator(answers.floor)
}

로 입력하여 실행하면 된다.

